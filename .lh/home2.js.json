{
    "sourceFile": "home2.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1728064089060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728064172697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,10 @@\n       let div = document.createElement('div')\r\n       div.classList.add(name + '__mod-w')\r\n \r\n       item$a.forEach((item, i) => {\r\n-        const button$ = item.querySelector('.button')\r\n+        const _button$ = item.querySelector('.button')\r\n+        _button$.replaceWith(_button$.cloneNode(true))\r\n         const modal$ = item.querySelector('.mod-w')\r\n \r\n         const video = item.querySelector('video')\r\n         const videoUrl = item.querySelector('source').src\r\n"
                },
                {
                    "date": 1728064215122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       div.classList.add(name + '__mod-w')\r\n \r\n       item$a.forEach((item, i) => {\r\n         const _button$ = item.querySelector('.button')\r\n-        _button$.replaceWith(_button$.cloneNode(true))\r\n+        const button$ = _button$.replaceWith(_button$.cloneNode(true))\r\n         const modal$ = item.querySelector('.mod-w')\r\n \r\n         const video = item.querySelector('video')\r\n         const videoUrl = item.querySelector('source').src\r\n"
                },
                {
                    "date": 1728064238424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,10 @@\n       div.classList.add(name + '__mod-w')\r\n \r\n       item$a.forEach((item, i) => {\r\n         const _button$ = item.querySelector('.button')\r\n-        const button$ = _button$.replaceWith(_button$.cloneNode(true))\r\n+        _button$.replaceWith(_button$.cloneNode(true))\r\n+        const button$ = item.querySelector('.button')\r\n         const modal$ = item.querySelector('.mod-w')\r\n \r\n         const video = item.querySelector('video')\r\n         const videoUrl = item.querySelector('source').src\r\n"
                },
                {
                    "date": 1728064464201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,15 @@\n import { addSplideClasses, connectSplideArrows, connectSplideBullets, connectSplideCarouselBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\n import '@splidejs/splide/css'\r\n import Splide from '@splidejs/splide'\r\n-\r\n import gsap from 'gsap'\r\n \r\n+import videojs from 'video.js'\r\n+import 'video.js/dist/video-js.css'\r\n+import 'videojs-xr'\r\n+import 'videojs-contrib-quality-levels'\r\n+import hlsQualitySelector from 'videojs-hls-quality-selector'\r\n+\r\n selAll('video').forEach((el) => {\r\n   // el.pause()\r\n })\r\n \r\n@@ -37,9 +42,32 @@\n         const modal$ = item.querySelector('.mod-w')\r\n \r\n         const video = item.querySelector('video')\r\n         const videoUrl = item.querySelector('source').src\r\n-        console.log('videoUrl', videoUrl)\r\n+\r\n+        const player = videojs(video, {\r\n+          controls: true,\r\n+          sources: [\r\n+            {\r\n+              src: videoUrl,\r\n+              type: 'application/x-mpegURL',\r\n+            },\r\n+          ],\r\n+        })\r\n+\r\n+        // videojs.registerPlugin('hlsQualitySelector', hlsQualitySelector)\r\n+        player.ready(() => {\r\n+          player.controls(true)\r\n+          // player.vr({ projection: '360' })\r\n+          player.xr()\r\n+          player.hlsQualitySelector({\r\n+            displayCurrentQuality: true,\r\n+          })\r\n+          const qualityLevels = player.qualityLevels()\r\n+\r\n+          console.log(player.paused(), qualityLevels.length)\r\n+        })\r\n+\r\n         const _modalX$ = modal$.querySelector('.mod__x-w')\r\n         _modalX$.replaceWith(_modalX$.cloneNode(true))\r\n         const modalX$ = modal$.querySelector('.mod__x-w')\r\n \r\n"
                },
                {
                    "date": 1728064850208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,16 +56,14 @@\n \r\n         // videojs.registerPlugin('hlsQualitySelector', hlsQualitySelector)\r\n         player.ready(() => {\r\n           player.controls(true)\r\n-          // player.vr({ projection: '360' })\r\n-          player.xr()\r\n+          player.vr({ projection: '360' })\r\n+          // player.xr()\r\n           player.hlsQualitySelector({\r\n             displayCurrentQuality: true,\r\n           })\r\n-          const qualityLevels = player.qualityLevels()\r\n-\r\n-          console.log(player.paused(), qualityLevels.length)\r\n+          // const qualityLevels = player.qualityLevels()\r\n         })\r\n \r\n         const _modalX$ = modal$.querySelector('.mod__x-w')\r\n         _modalX$.replaceWith(_modalX$.cloneNode(true))\r\n"
                },
                {
                    "date": 1728064881040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \r\n import videojs from 'video.js'\r\n import 'video.js/dist/video-js.css'\r\n import 'videojs-xr'\r\n+import 'videojs-vr'\r\n import 'videojs-contrib-quality-levels'\r\n import hlsQualitySelector from 'videojs-hls-quality-selector'\r\n \r\n selAll('video').forEach((el) => {\r\n"
                },
                {
                    "date": 1728064929250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,13 +57,13 @@\n \r\n         // videojs.registerPlugin('hlsQualitySelector', hlsQualitySelector)\r\n         player.ready(() => {\r\n           player.controls(true)\r\n-          player.vr({ projection: '360' })\r\n-          // player.xr()\r\n+          // player.vr({ projection: '360' })\r\n           player.hlsQualitySelector({\r\n             displayCurrentQuality: true,\r\n           })\r\n+          player.xr()\r\n           // const qualityLevels = player.qualityLevels()\r\n         })\r\n \r\n         const _modalX$ = modal$.querySelector('.mod__x-w')\r\n"
                },
                {
                    "date": 1728067807128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,13 @@\n         const videoUrl = item.querySelector('source').src\r\n \r\n         const player = videojs(video, {\r\n           controls: true,\r\n+          html5: {\r\n+            vhs: {\r\n+              bandwidth: 1400000, // Set a default bandwidth (1.4 Mbps) as an example\r\n+            },\r\n+          },\r\n           sources: [\r\n             {\r\n               src: videoUrl,\r\n               type: 'application/x-mpegURL',\r\n"
                },
                {
                    "date": 1728067817299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         const player = videojs(video, {\r\n           controls: true,\r\n           html5: {\r\n             vhs: {\r\n-              bandwidth: 1400000, // Set a default bandwidth (1.4 Mbps) as an example\r\n+              bandwidth: 140000000, // Set a default bandwidth (1.4 Mbps) as an example\r\n             },\r\n           },\r\n           sources: [\r\n             {\r\n"
                },
                {
                    "date": 1728067900504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,14 +86,14 @@\n         modalTl.set(modal$, { display: 'block' }, 0).fromTo(modal$, { autoAlpha: 0 }, { autoAlpha: 1 }, 0)\r\n \r\n         button$.onclick = () => {\r\n           gsap.to(modalTl, { time: modalTl.duration(), duration: modalTl.duration(), ease: 'power4.out' })\r\n-          video.play()\r\n+          player.play()\r\n         }\r\n         ;[modalX$].forEach((el) => {\r\n           el.onclick = () => {\r\n             gsap.to(modalTl, { time: 0, duration: modalTl.duration(), ease: 'power4.out', overwrite: true })\r\n-            video.pause()\r\n+            player.pause()\r\n           }\r\n         })\r\n       })\r\n       const section$ = sel(`.${name}-sec`)\r\n"
                },
                {
                    "date": 1728068165260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,13 +86,15 @@\n         modalTl.set(modal$, { display: 'block' }, 0).fromTo(modal$, { autoAlpha: 0 }, { autoAlpha: 1 }, 0)\r\n \r\n         button$.onclick = () => {\r\n           gsap.to(modalTl, { time: modalTl.duration(), duration: modalTl.duration(), ease: 'power4.out' })\r\n+            el.style.setProperty('user-event', 'auto')\r\n           player.play()\r\n         }\r\n         ;[modalX$].forEach((el) => {\r\n           el.onclick = () => {\r\n             gsap.to(modalTl, { time: 0, duration: modalTl.duration(), ease: 'power4.out', overwrite: true })\r\n+            el.style.setProperty('user-event', 'none')\r\n             player.pause()\r\n           }\r\n         })\r\n       })\r\n"
                },
                {
                    "date": 1728068172119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n         modalTl.set(modal$, { display: 'block' }, 0).fromTo(modal$, { autoAlpha: 0 }, { autoAlpha: 1 }, 0)\r\n \r\n         button$.onclick = () => {\r\n           gsap.to(modalTl, { time: modalTl.duration(), duration: modalTl.duration(), ease: 'power4.out' })\r\n-            el.style.setProperty('user-event', 'auto')\r\n+          el.style.setProperty('user-event', 'auto')\r\n           player.play()\r\n         }\r\n         ;[modalX$].forEach((el) => {\r\n           el.onclick = () => {\r\n"
                },
                {
                    "date": 1728068965220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,43 +35,41 @@\n       const item$a = list$.querySelectorAll('.w-dyn-item')\r\n       let div = document.createElement('div')\r\n       div.classList.add(name + '__mod-w')\r\n \r\n+      function playerInit(el){\r\n+                const video = el.querySelector('video')\r\n+                const videoUrl = el.querySelector('source').src\r\n+\r\n+                const player = videojs(video, {\r\n+                  controls: true,\r\n+                  sources: [\r\n+                    {\r\n+                      src: videoUrl,\r\n+                      type: 'application/x-mpegURL',\r\n+                    },\r\n+                  ],\r\n+                })\r\n+\r\n+                // videojs.registerPlugin('hlsQualitySelector', hlsQualitySelector)\r\n+                player.ready(() => {\r\n+                  player.controls(true)\r\n+                  // player.vr({ projection: '360' })\r\n+                  player.hlsQualitySelector({\r\n+                    displayCurrentQuality: true,\r\n+                  })\r\n+                  player.xr()\r\n+                  // const qualityLevels = player.qualityLevels()\r\n+                })\r\n+\r\n+      }\r\n       item$a.forEach((item, i) => {\r\n         const _button$ = item.querySelector('.button')\r\n         _button$.replaceWith(_button$.cloneNode(true))\r\n         const button$ = item.querySelector('.button')\r\n         const modal$ = item.querySelector('.mod-w')\r\n \r\n-        const video = item.querySelector('video')\r\n-        const videoUrl = item.querySelector('source').src\r\n \r\n-        const player = videojs(video, {\r\n-          controls: true,\r\n-          html5: {\r\n-            vhs: {\r\n-              bandwidth: 140000000, // Set a default bandwidth (1.4 Mbps) as an example\r\n-            },\r\n-          },\r\n-          sources: [\r\n-            {\r\n-              src: videoUrl,\r\n-              type: 'application/x-mpegURL',\r\n-            },\r\n-          ],\r\n-        })\r\n-\r\n-        // videojs.registerPlugin('hlsQualitySelector', hlsQualitySelector)\r\n-        player.ready(() => {\r\n-          player.controls(true)\r\n-          // player.vr({ projection: '360' })\r\n-          player.hlsQualitySelector({\r\n-            displayCurrentQuality: true,\r\n-          })\r\n-          player.xr()\r\n-          // const qualityLevels = player.qualityLevels()\r\n-        })\r\n-\r\n         const _modalX$ = modal$.querySelector('.mod__x-w')\r\n         _modalX$.replaceWith(_modalX$.cloneNode(true))\r\n         const modalX$ = modal$.querySelector('.mod__x-w')\r\n \r\n"
                },
                {
                    "date": 1728069171228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,10 +59,12 @@\n           })\r\n           player.xr()\r\n           // const qualityLevels = player.qualityLevels()\r\n         })\r\n+        return player\r\n       }\r\n       item$a.forEach((item, i) => {\r\n+        let player = null\r\n         const _button$ = item.querySelector('.button')\r\n         _button$.replaceWith(_button$.cloneNode(true))\r\n         const button$ = item.querySelector('.button')\r\n         const modal$ = item.querySelector('.mod-w')\r\n@@ -81,19 +83,17 @@\n         })\r\n         modalTl.set(modal$, { display: 'block' }, 0).fromTo(modal$, { autoAlpha: 0 }, { autoAlpha: 1 }, 0)\r\n \r\n         button$.onclick = () => {\r\n+          player = playerInit(item)\r\n           gsap.to(modalTl, { time: modalTl.duration(), duration: modalTl.duration(), ease: 'power4.out' })\r\n-          el.style.setProperty('user-event', 'auto')\r\n           player.play()\r\n         }\r\n-        ;[modalX$].forEach((el) => {\r\n-          el.onclick = () => {\r\n-            gsap.to(modalTl, { time: 0, duration: modalTl.duration(), ease: 'power4.out', overwrite: true })\r\n-            el.style.setProperty('user-event', 'none')\r\n-            player.pause()\r\n-          }\r\n-        })\r\n+        modalX$.onclick = () => {\r\n+          gsap.to(modalTl, { time: 0, duration: modalTl.duration(), ease: 'power4.out', overwrite: true })\r\n+          player.pause()\r\n+          player.dispose()\r\n+        }\r\n       })\r\n       const section$ = sel(`.${name}-sec`)\r\n       section$.appendChild(div)\r\n     }\r\n"
                },
                {
                    "date": 1728069232382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import '@splidejs/splide/css'\r\n import Splide from '@splidejs/splide'\r\n import gsap from 'gsap'\r\n \r\n-import videojs from 'video.js'\r\n+import videojs, { log } from 'video.js'\r\n import 'video.js/dist/video-js.css'\r\n import 'videojs-xr'\r\n import 'videojs-vr'\r\n import 'videojs-contrib-quality-levels'\r\n@@ -36,8 +36,9 @@\n       let div = document.createElement('div')\r\n       div.classList.add(name + '__mod-w')\r\n \r\n       function playerInit(el) {\r\n+        log('playerInit', el)\r\n         const video = el.querySelector('video')\r\n         const videoUrl = el.querySelector('source').src\r\n \r\n         const player = videojs(video, {\r\n"
                }
            ],
            "date": 1728064089060,
            "name": "Commit-0",
            "content": "import { addSplideClasses, connectSplideArrows, connectSplideBullets, connectSplideCarouselBullets, onDomReady, sel, selAll, splideAutoWidth } from './utils'\r\nimport '@splidejs/splide/css'\r\nimport Splide from '@splidejs/splide'\r\n\r\nimport gsap from 'gsap'\r\n\r\nselAll('video').forEach((el) => {\r\n  // el.pause()\r\n})\r\n\r\nexport default function Home() {\r\n  function momentInit() {\r\n    const name = 'moments'\r\n\r\n    addSplideClasses(name + '__slider')\r\n    const splide = new Splide('.' + name + '__slider', {\r\n      // perPage: 1,\r\n      // width: '100%',\r\n      autoplay: false,\r\n      // autoHeight: true,\r\n      type: 'fade',\r\n      rewind: true,\r\n      pagination: false,\r\n      arrows: false,\r\n    })\r\n\r\n    if (sel('.moments-sec .mod-w')) {\r\n      const list$ = sel(`.${name}__nav-slider .w-dyn-items`)\r\n      const item$a = list$.querySelectorAll('.w-dyn-item')\r\n      let div = document.createElement('div')\r\n      div.classList.add(name + '__mod-w')\r\n\r\n      item$a.forEach((item, i) => {\r\n        const button$ = item.querySelector('.button')\r\n        const modal$ = item.querySelector('.mod-w')\r\n\r\n        const video = item.querySelector('video')\r\n        const videoUrl = item.querySelector('source').src\r\n        console.log('videoUrl', videoUrl)\r\n        const _modalX$ = modal$.querySelector('.mod__x-w')\r\n        _modalX$.replaceWith(_modalX$.cloneNode(true))\r\n        const modalX$ = modal$.querySelector('.mod__x-w')\r\n\r\n        div.appendChild(modal$)\r\n        const modalTl = gsap.timeline({\r\n          defaults: {\r\n            duration: 0.8,\r\n            ease: 'none',\r\n          },\r\n          paused: true,\r\n        })\r\n        modalTl.set(modal$, { display: 'block' }, 0).fromTo(modal$, { autoAlpha: 0 }, { autoAlpha: 1 }, 0)\r\n\r\n        button$.onclick = () => {\r\n          gsap.to(modalTl, { time: modalTl.duration(), duration: modalTl.duration(), ease: 'power4.out' })\r\n          video.play()\r\n        }\r\n        ;[modalX$].forEach((el) => {\r\n          el.onclick = () => {\r\n            gsap.to(modalTl, { time: 0, duration: modalTl.duration(), ease: 'power4.out', overwrite: true })\r\n            video.pause()\r\n          }\r\n        })\r\n      })\r\n      const section$ = sel(`.${name}-sec`)\r\n      section$.appendChild(div)\r\n    }\r\n\r\n    addSplideClasses(name + '__nav-slider')\r\n    const nav = new Splide('.' + name + '__nav-slider', {\r\n      rewind: true,\r\n      pagination: false,\r\n      arrows: false,\r\n      isNavigation: true,\r\n      autoplay: true,\r\n      speed: 1500,\r\n    })\r\n\r\n    splide.sync(nav)\r\n    splide.mount()\r\n    nav.mount()\r\n    let activeSlide$ = nav.Components.Slides.get()[0].slide\r\n\r\n    nav.on('active', function (index) {\r\n      activeSlide$ = index.slide\r\n      // const currentIndex = nav.index\r\n      // activeSlide$ = nav.Components.Slides.get()[currentIndex].slide\r\n      // log('activeSlide$', activeSlide$)\r\n    })\r\n    nav.on('autoplay:playing click', function (rate) {\r\n      if (activeSlide$) {\r\n        activeSlide$.style.setProperty('--width', rate * 100 + '%')\r\n      }\r\n    })\r\n  }\r\n  // setTimeout(() => {\r\n  momentInit()\r\n  // }, 500)\r\n\r\n  function testInit() {\r\n    const name = 'testimonials'\r\n    addSplideClasses(name + '__slider')\r\n    const splide = new Splide('.' + name + '__slider', {\r\n      perPage: 1,\r\n      gap: '1rem',\r\n      type: 'loop',\r\n      pagination: false,\r\n      arrows: false,\r\n      speed: 1500,\r\n      easing: 'cubic-bezier(0.16, 1, 0.3, 1)',\r\n    })\r\n\r\n    splide.mount()\r\n    connectSplideBullets(splide, '.testimonials__bullets')\r\n    connectSplideArrows(splide, '.testimonials__arrows')\r\n  }\r\n  testInit()\r\n}\r\n"
        }
    ]
}